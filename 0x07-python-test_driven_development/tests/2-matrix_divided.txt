The ``2-matrix_divided`` module
==========================

Using ``matrix_divided``
--------------------


This is the test case for 2-matrix_divided.
It multiplies two matrices together and returns the result

Import the module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Div is zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Row have diff sizes
>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Matrix has strings
>>> matrix_divided([[1, "2", 3], [4, 5, 6, 7]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Div is a string
>>> matrix_divided([[1, 2, 3], [4, 6, 7]], "2")
Traceback (most recent call last):
...
TypeError: div must be a number

Matrix is a string
>>> matrix_divided(1, 2)
Traceback (most recent call last):
...
TypeError: 'int' object is not iterable

Matrix function is empty
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

only one param is given
>>> matrix_divided(2)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

 
 
