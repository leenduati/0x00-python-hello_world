The ``4-print_square`` module
==========================

Using ``print_square``
--------------------


This is the test case for 4-print_square.
It prints a square of # according to input given

>>> print_square = __import__('4-print_square').print_square

Trying with 4
>>> print_square(4)
####
####
####
####

Trying with 1
>>> print_square(1)
#

Trying with a -ve number
>>> print_square(-2)
Traceback (most recent call last):
...
ValueError: size must be >= 0

>>> print_square("lee")
Traceback (most recent call last):
...
TypeError: size must be an integer

Trying blank input
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'
>>> print_square(float('inf'))
Traceback (most recent call last):
...
TypeError: size must be an integer
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(-5.3)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square(0)

